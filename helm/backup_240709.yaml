apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
      timestamp: 20240613-122811
    creationTimestamp: "2024-06-13T10:28:17Z"
    generateName: argoflow-api-v2-596f9fd658-
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 596f9fd658
    name: argoflow-api-v2-596f9fd658-gq2vc
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: argoflow-api-v2-596f9fd658
      uid: 61f0c00c-bf63-4957-a58a-951ba4771d1f
    resourceVersion: "273034301"
    uid: f6ce1de7-fa92-4725-bf6b-a863ca0220d8
  spec:
    containers:
    - env:
      - name: NODE_ENV
        value: development
      - name: AF_API_CONFIG_B64
        valueFrom:
          secretKeyRef:
            key: AF_API_CONFIG_B64
            name: af-api-secrets
      image: argoteam/argoflow-api-v2:2.20
      imagePullPolicy: Always
      name: argoflow-api-v2
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /storage
        name: efs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z5mmc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: efs
      persistentVolumeClaim:
        claimName: efs-claim
    - name: kube-api-access-z5mmc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:29:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:29:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:29:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0dd47ed8170c644915c8f97ac8646e17719b780256bebb13581dc7b44a3febc9
      image: docker.io/argoteam/argoflow-api-v2:2.20
      imageID: docker.io/argoteam/argoflow-api-v2@sha256:baa6a2bd934882d06084ed57cd7f6fdae0bd7f98fd903309b8320bd66b7a9096
      lastState: {}
      name: argoflow-api-v2
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-13T10:29:05Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.12.14
    podIPs:
    - ip: 192.168.12.14
    qosClass: BestEffort
    startTime: "2024-06-13T10:28:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-22T10:23:40Z"
    generateName: clickhouse-
    labels:
      apps.kubernetes.io/pod-index: "0"
      component: clickhouse
      controller-revision-hash: clickhouse-7c888d494f
      statefulset.kubernetes.io/pod-name: clickhouse-0
    name: clickhouse-0
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: clickhouse
      uid: ffab1dc0-99bc-4834-b4be-2a4e6ffa50ad
    resourceVersion: "257060360"
    uid: 6058c390-cbb8-4647-bedb-dc1d5febf387
  spec:
    containers:
    - image: clickhouse/clickhouse-server:23.7.4
      imagePullPolicy: IfNotPresent
      name: clickhouse
      ports:
      - containerPort: 8123
        protocol: TCP
      - containerPort: 9000
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/clickhouse
        name: clickhouse-persistent-volume
        subPath: clickhouse
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8nhll
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: clickhouse-0
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: clickhouse-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: clickhouse-persistent-volume
      persistentVolumeClaim:
        claimName: clickhouse-persistent-volume-clickhouse-0
    - name: kube-api-access-8nhll
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:23:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:23:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://4d81f0ae3576b170b6a2c08b0fc15bd3d9d2276ab84f4af7a7c59ac40087fcdb
      image: docker.io/clickhouse/clickhouse-server:23.7.4
      imageID: docker.io/clickhouse/clickhouse-server@sha256:1c89c1c761776c33b3096922b3a26ed10afc5b6a4b7754b8d1f1c528488df57e
      lastState: {}
      name: clickhouse
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-22T10:24:51Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Running
    podIP: 192.168.109.210
    podIPs:
    - ip: 192.168.109.210
    qosClass: BestEffort
    startTime: "2024-04-22T10:23:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-06-13T10:28:20Z"
    generateName: clickhouse-bulk-
    labels:
      apps.kubernetes.io/pod-index: "0"
      component: clickhouse-bulk
      controller-revision-hash: clickhouse-bulk-598789877f
      statefulset.kubernetes.io/pod-name: clickhouse-bulk-0
    name: clickhouse-bulk-0
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: clickhouse-bulk
      uid: d0d7e013-9a02-4cc1-8139-ecd193b07bf2
    resourceVersion: "273034139"
    uid: 7b2b06dc-a17c-4bb2-8e55-3baaf18f7fed
  spec:
    containers:
    - env:
      - name: CLICKHOUSE_SERVERS
        value: http://clickhouse-service:8123
      - name: CLICKHOUSE_FLUSH_COUNT
        value: "10000"
      - name: CLICKHOUSE_FLUSH_INTERVAL
        value: "5000"
      - name: DUMP_CHECK_INTERVAL
        value: "300"
      - name: CLICKHOUSE_DOWN_TIMEOUT
        value: "180"
      - name: CLICKHOUSE_CONNECT_TIMEOUT
        value: "10"
      - name: CLICKHOUSE_CLEAN_INTERVAL
        value: "30000"
      image: argoteam/clickhouse-bulk:1.1
      imagePullPolicy: IfNotPresent
      name: clickhouse-bulk
      ports:
      - containerPort: 8124
        name: tcp
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/dumps
        name: clickhouse-bulk-persistent-volume
        subPath: clickhouse_bulk
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xp99l
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: clickhouse-bulk-0
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: clickhouse-bulk-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: clickhouse-bulk-persistent-volume
      persistentVolumeClaim:
        claimName: clickhouse-bulk-persistent-volume-clickhouse-bulk-0
    - name: kube-api-access-xp99l
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3a15edcbac17828f6a5b83f830594f222427c04f40e40a535ac5b39efc22dd80
      image: docker.io/argoteam/clickhouse-bulk:1.1
      imageID: docker.io/argoteam/clickhouse-bulk@sha256:c42b21a53e8c26da0631e3f96c2e03ba830e2469465ba0723d695552dc81ffe5
      lastState: {}
      name: clickhouse-bulk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-13T10:28:24Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Running
    podIP: 192.168.122.34
    podIPs:
    - ip: 192.168.122.34
    qosClass: BestEffort
    startTime: "2024-06-13T10:28:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-22T10:26:26Z"
    generateName: clickhouse-proxy-5d75477979-
    labels:
      component: clickhouse-proxy
      pod-template-hash: 5d75477979
    name: clickhouse-proxy-5d75477979-p8f5v
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: clickhouse-proxy-5d75477979
      uid: 388895a8-33e6-4740-bfcb-5740d5f43147
    resourceVersion: "257061033"
    uid: b317fc65-c152-47dc-b7ae-f05773fd3787
  spec:
    containers:
    - env:
      - name: CLICKHOUSE_INGESTOR
        value: http://clickhouse-bulk-service:8124
      image: argoteam/clickhouse-proxy:dev
      imagePullPolicy: IfNotPresent
      name: clickhouse-proxy
      ports:
      - containerPort: 80
        name: tcp
        protocol: TCP
      - containerPort: 8091
        name: udp
        protocol: TCP
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7nv55
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-7nv55
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://412dbecd1912d6d76eba534c9aca70f25510190b479030db7fd83cde2f54618f
      image: docker.io/argoteam/clickhouse-proxy:dev
      imageID: docker.io/argoteam/clickhouse-proxy@sha256:48f2ea60145a748f13eeae5465fe12b160000af21d1ec6290769e7f4e0a428a0
      lastState: {}
      name: clickhouse-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-22T10:26:43Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.25.102
    podIPs:
    - ip: 192.168.25.102
    qosClass: Burstable
    startTime: "2024-04-22T10:26:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      timestamp: 20240613-122811
    creationTimestamp: "2024-06-13T10:28:17Z"
    generateName: editor-56bdb6f877-
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 56bdb6f877
    name: editor-56bdb6f877-ws9nf
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: editor-56bdb6f877
      uid: de1f1c33-3097-4e07-a32a-cc5d250c06cc
    resourceVersion: "273034070"
    uid: e4a6f8a5-752a-458b-ab9b-176ae8503896
  spec:
    containers:
    - env:
      - name: NODE_ENV
        value: development
      - name: ALLOWED_DOMAINS_LIST
        value: '*.argoflow.io'
      - name: AURA_HOST
        value: https://k8s-files.argoflow.io
      image: argoteam/ar-editor:2.20
      imagePullPolicy: Always
      name: editor
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html/assets/app-config.json
        name: editor-conf
        readOnly: true
        subPath: app-config.json
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cttbj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: editor-conf
      name: editor-conf
    - name: kube-api-access-cttbj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e534f4a61aa281f22937ab6b3a8090b6559bfb89ed88f3a4905c25ea284bd280
      image: docker.io/argoteam/ar-editor:2.20
      imageID: docker.io/argoteam/ar-editor@sha256:8ee97f8fca7dda6a66c8993377ecb24100eeeebe6ceed55a4a34b470c547c385
      lastState: {}
      name: editor
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-13T10:28:19Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.51.96
    podIPs:
    - ip: 192.168.51.96
    qosClass: BestEffort
    startTime: "2024-06-13T10:28:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-22T10:26:26Z"
    generateName: files-deployment-5d5946d6bb-
    labels:
      name: files
      pod-template-hash: 5d5946d6bb
    name: files-deployment-5d5946d6bb-68lnk
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: files-deployment-5d5946d6bb
      uid: a71368e4-b42f-4622-968c-78abedd0e946
    resourceVersion: "257061056"
    uid: c2bcf302-166d-4a08-8f0f-7cee75b28c6b
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/nginx
        name: files-conf
        readOnly: true
      - mountPath: /var/log/nginx
        name: log
      - mountPath: /storage
        name: efs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xw7xr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: nginx.conf
          path: nginx.conf
        - key: mime.types
          path: mime.types
        name: files-conf
      name: files-conf
    - emptyDir: {}
      name: log
    - name: efs
      persistentVolumeClaim:
        claimName: efs-claim
    - name: kube-api-access-xw7xr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://59279cd9ce347bfa257add6568944c4b896b2c91a38f0be835eeaf97e1a5bcb6
      image: docker.io/library/nginx:latest
      imageID: docker.io/library/nginx@sha256:0463a96ac74b84a8a1b27f3d1f4ae5d1a70ea823219394e131f5bf3536674419
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-22T10:26:46Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.38.22
    podIPs:
    - ip: 192.168.38.22
    qosClass: BestEffort
    startTime: "2024-04-22T10:26:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      timestamp: 20240613-122811
    creationTimestamp: "2024-06-13T10:28:17Z"
    generateName: manager-7bf747fdf-
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 7bf747fdf
    name: manager-7bf747fdf-shxd2
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: manager-7bf747fdf
      uid: 1ea8b7ba-1cfe-4fb5-a660-e95b4ebd30ad
    resourceVersion: "273034088"
    uid: c2ab393c-0393-47be-9e29-c1f72e83a901
  spec:
    containers:
    - image: argoteam/argoflow-ui:2.20
      imagePullPolicy: Always
      name: manager
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html/assets/app-config.json
        name: manager-conf
        readOnly: true
        subPath: app-config.json
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qnjmh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: manager-conf
      name: manager-conf
    - name: kube-api-access-qnjmh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a6400c89fd2baf30d0290a79e073a47d6c24a597607420739065bfb262bc9ca8
      image: docker.io/argoteam/argoflow-ui:2.20
      imageID: docker.io/argoteam/argoflow-ui@sha256:712e4c8364924f62a0de4906c6c8ce7f5d02509fbf5b49e217bf27abb08a7c33
      lastState: {}
      name: manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-13T10:28:19Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Running
    podIP: 192.168.121.72
    podIPs:
    - ip: 192.168.121.72
    qosClass: BestEffort
    startTime: "2024-06-13T10:28:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-22T10:23:38Z"
    generateName: mongo-
    labels:
      apps.kubernetes.io/pod-index: "0"
      component: mongo
      controller-revision-hash: mongo-77f59d998b
      statefulset.kubernetes.io/pod-name: mongo-0
    name: mongo-0
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: mongo
      uid: 4327ef4c-3992-4041-91b5-50513d437d6f
    resourceVersion: "257060297"
    uid: f18b7681-3573-4460-9b1f-573489bdf27e
  spec:
    containers:
    - image: mongo:4.4
      imagePullPolicy: IfNotPresent
      name: mongo
      ports:
      - containerPort: 27017
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/db
        name: mongo-persistent-volume
        subPath: mongo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nzqp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: mongo-0
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: mongo-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mongo-persistent-volume
      persistentVolumeClaim:
        claimName: mongo-persistent-volume-mongo-0
    - name: kube-api-access-9nzqp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:23:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:23:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cd45890c6954358727740d0573df54b07b67f85c9d21445b56140d7e240f84cb
      image: docker.io/library/mongo:4.4
      imageID: docker.io/library/mongo@sha256:d41dabba79a5b5ef19067da6e770f513b339b6ad3126d394c21d516d3c7b1906
      lastState: {}
      name: mongo
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-22T10:24:39Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Running
    podIP: 192.168.117.92
    podIPs:
    - ip: 192.168.117.92
    qosClass: BestEffort
    startTime: "2024-04-22T10:23:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-22T10:23:40Z"
    generateName: mysql-
    labels:
      apps.kubernetes.io/pod-index: "0"
      component: mysql
      controller-revision-hash: mysql-65fbf79b97
      statefulset.kubernetes.io/pod-name: mysql-0
    name: mysql-0
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: mysql
      uid: 95361dcc-3945-4023-92a2-8b25a0a98fef
    resourceVersion: "257060267"
    uid: 90d941c2-7676-485f-a274-681d259615c6
  spec:
    containers:
    - args:
      - --default-authentication-plugin=mysql_native_password
      env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            key: MYSQL_PASSWORD
            name: sso-secret
      - name: MYSQL_DATABASE
        value: sso
      image: mysql:8.0.35
      imagePullPolicy: IfNotPresent
      name: mysql
      ports:
      - containerPort: 3306
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-persistent-volume
        subPath: mysql
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9jwgk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: mysql-0
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    subdomain: mysql-service
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: mysql-persistent-volume
      persistentVolumeClaim:
        claimName: mysql-persistent-volume-mysql-0
    - name: kube-api-access-9jwgk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:23:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:24:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:23:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a349536e6750e2e6d012695d1360b5eabf8a9a8da9e15e4c500a6f14363c1863
      image: docker.io/library/mysql:8.0.35
      imageID: docker.io/library/mysql@sha256:c6812f0dcd978b589d9d3b90c20bd5e4a799deab4fd492985e0a076c5be1ee40
      lastState: {}
      name: mysql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-22T10:24:34Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Running
    podIP: 192.168.78.102
    podIPs:
    - ip: 192.168.78.102
    qosClass: BestEffort
    startTime: "2024-04-22T10:23:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-07-07T02:00:00Z"
    generateName: mysql-backup-28671960-
    labels:
      batch.kubernetes.io/controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
      batch.kubernetes.io/job-name: mysql-backup-28671960
      controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
      job-name: mysql-backup-28671960
    name: mysql-backup-28671960-9m4qq
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: mysql-backup-28671960
      uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
    resourceVersion: "280564530"
    uid: b62e8ba1-6969-40fb-bdb0-9391e0cf4a56
  spec:
    containers:
    - env:
      - name: MYSQL_HOST
        value: mysql-service
      - name: MYSQL_PORT
        value: "3306"
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: MYSQL_LOGIN
            name: sso-secret
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: MYSQL_PASSWORD
            name: sso-secret
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            key: S3_ACCESS_KEY
            name: aws-secret
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: S3_SECRET_KEY
            name: aws-secret
      - name: BUCKET
        value: backups.bear2b.com
      - name: PATH
        value: mysql_backups/argoflow-k8s-sso
      image: argoteam/mysql-backup-s3:1.1
      imagePullPolicy: IfNotPresent
      name: mysql-backup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6tfnj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6tfnj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-07-07T02:00:06Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-07-07T02:00:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-07-07T02:00:05Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-07-07T02:00:05Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-07-07T02:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a9587b206b0510c02493c9e0e4158f4090f370a929a1b63aa869cf382eaba794
      image: docker.io/argoteam/mysql-backup-s3:1.1
      imageID: docker.io/argoteam/mysql-backup-s3@sha256:44f111e8841fc3c0957f90a61efce8c0ad1b611e065cb0ffd859f9f66d764f52
      lastState: {}
      name: mysql-backup
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a9587b206b0510c02493c9e0e4158f4090f370a929a1b63aa869cf382eaba794
          exitCode: 0
          finishedAt: "2024-07-07T02:00:05Z"
          reason: Completed
          startedAt: "2024-07-07T02:00:00Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Succeeded
    podIP: 192.168.85.242
    podIPs:
    - ip: 192.168.85.242
    qosClass: BestEffort
    startTime: "2024-07-07T02:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-07-08T02:00:00Z"
    generateName: mysql-backup-28673400-
    labels:
      batch.kubernetes.io/controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
      batch.kubernetes.io/job-name: mysql-backup-28673400
      controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
      job-name: mysql-backup-28673400
    name: mysql-backup-28673400-tnpx5
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: mysql-backup-28673400
      uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
    resourceVersion: "280882974"
    uid: 631155cf-23ff-44c6-b170-248d7e25523d
  spec:
    containers:
    - env:
      - name: MYSQL_HOST
        value: mysql-service
      - name: MYSQL_PORT
        value: "3306"
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: MYSQL_LOGIN
            name: sso-secret
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: MYSQL_PASSWORD
            name: sso-secret
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            key: S3_ACCESS_KEY
            name: aws-secret
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: S3_SECRET_KEY
            name: aws-secret
      - name: BUCKET
        value: backups.bear2b.com
      - name: PATH
        value: mysql_backups/argoflow-k8s-sso
      image: argoteam/mysql-backup-s3:1.1
      imagePullPolicy: IfNotPresent
      name: mysql-backup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ks8xk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-ks8xk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-07-08T02:00:06Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-07-08T02:00:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-07-08T02:00:05Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-07-08T02:00:05Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-07-08T02:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1e3f68c08842d6acfd2a7f08a5a4b3bb9f34cf841fb474daa6e3a0153f256a43
      image: docker.io/argoteam/mysql-backup-s3:1.1
      imageID: docker.io/argoteam/mysql-backup-s3@sha256:44f111e8841fc3c0957f90a61efce8c0ad1b611e065cb0ffd859f9f66d764f52
      lastState: {}
      name: mysql-backup
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1e3f68c08842d6acfd2a7f08a5a4b3bb9f34cf841fb474daa6e3a0153f256a43
          exitCode: 0
          finishedAt: "2024-07-08T02:00:04Z"
          reason: Completed
          startedAt: "2024-07-08T02:00:01Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Succeeded
    podIP: 192.168.85.242
    podIPs:
    - ip: 192.168.85.242
    qosClass: BestEffort
    startTime: "2024-07-08T02:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-07-09T02:00:00Z"
    generateName: mysql-backup-28674840-
    labels:
      batch.kubernetes.io/controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
      batch.kubernetes.io/job-name: mysql-backup-28674840
      controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
      job-name: mysql-backup-28674840
    name: mysql-backup-28674840-n9thg
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: Job
      name: mysql-backup-28674840
      uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
    resourceVersion: "281201399"
    uid: 02c46706-caa4-43e6-bc07-5c30593284c4
  spec:
    containers:
    - env:
      - name: MYSQL_HOST
        value: mysql-service
      - name: MYSQL_PORT
        value: "3306"
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: MYSQL_LOGIN
            name: sso-secret
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: MYSQL_PASSWORD
            name: sso-secret
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            key: S3_ACCESS_KEY
            name: aws-secret
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: S3_SECRET_KEY
            name: aws-secret
      - name: BUCKET
        value: backups.bear2b.com
      - name: PATH
        value: mysql_backups/argoflow-k8s-sso
      image: argoteam/mysql-backup-s3:1.1
      imagePullPolicy: IfNotPresent
      name: mysql-backup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pq6sq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-115-134.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pq6sq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-07-09T02:00:06Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-07-09T02:00:00Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-07-09T02:00:05Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-07-09T02:00:05Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-07-09T02:00:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://512fa3bc71ff34071249ab19bc26cd56e0838458a853c2fc11fbf910478df103
      image: docker.io/argoteam/mysql-backup-s3:1.1
      imageID: docker.io/argoteam/mysql-backup-s3@sha256:44f111e8841fc3c0957f90a61efce8c0ad1b611e065cb0ffd859f9f66d764f52
      lastState: {}
      name: mysql-backup
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://512fa3bc71ff34071249ab19bc26cd56e0838458a853c2fc11fbf910478df103
          exitCode: 0
          finishedAt: "2024-07-09T02:00:04Z"
          reason: Completed
          startedAt: "2024-07-09T02:00:00Z"
    hostIP: 192.168.115.134
    hostIPs:
    - ip: 192.168.115.134
    phase: Succeeded
    podIP: 192.168.117.50
    podIPs:
    - ip: 192.168.117.50
    qosClass: BestEffort
    startTime: "2024-07-09T02:00:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-04-22T10:26:26Z"
    generateName: redis-78c756c888-
    labels:
      component: redis
      pod-template-hash: 78c756c888
    name: redis-78c756c888-dwdln
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-78c756c888
      uid: dea707e7-25aa-4283-a7f9-891ab053c20e
    resourceVersion: "257061029"
    uid: 5e85edc5-b0b6-403e-a53f-757061dc7514
  spec:
    containers:
    - image: redis
      imagePullPolicy: Always
      name: redis
      ports:
      - containerPort: 6379
        protocol: TCP
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vzwgq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vzwgq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-04-22T10:26:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1ac8817816f883b437d5f984e9d1441695b603157edd2938d7713ebc9ee85a2a
      image: docker.io/library/redis:latest
      imageID: docker.io/library/redis@sha256:8a4aaf84f31a637cb4e88b82f64d898448ed2e1eabbd8484eb202a492cc98c63
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-04-22T10:26:43Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.40.69
    podIPs:
    - ip: 192.168.40.69
    qosClass: Burstable
    startTime: "2024-04-22T10:26:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      timestamp: 20240613-122811
    creationTimestamp: "2024-06-13T10:28:17Z"
    generateName: smartlink-creator-765cbddf7-
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 765cbddf7
    name: smartlink-creator-765cbddf7-vdwph
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: smartlink-creator-765cbddf7
      uid: 166897b6-d506-4772-b360-7ee08dbed135
    resourceVersion: "273034108"
    uid: f7553f0b-5e5b-42f5-b7a5-caa4bcd76f01
  spec:
    containers:
    - env:
      - name: NODE_ENV
        value: development
      - name: AF_API_URL
        value: https://k8s-api.argoflow.io
      - name: AF_API_TOKEN
        valueFrom:
          secretKeyRef:
            key: AF_API_TOKEN
            name: af-api-secrets
      - name: AF_TRACK_URL
        value: https://k8s-track.argoflow.io
      - name: AF_UI_URL
        value: https://k8s-ui.argoflow.io
      - name: EVENTS_SERVER
        value: https://statsdev.bear2b.com
      - name: KEEEX_BINARY
        value: fkeeex-linux
      - name: KEEEX_PASSPHRASE
        valueFrom:
          secretKeyRef:
            key: KEEEX_PASSPHRASE
            name: af-api-secrets
      - name: PORT
        value: "80"
      - name: PROTOCOL
      - name: SAVE_LAST_GULP_OPERATION_LOG
        value: "true"
      - name: SCRIPT_HOST
        value: https://k8s-scripts.argoflow.io
      - name: SMTP_HOST
        value: smtp.mail.ru
      - name: SMTP_PASS
        valueFrom:
          secretKeyRef:
            key: SMTP_PASS
            name: af-api-secrets
      - name: SMTP_PORT
        value: "465"
      - name: SMTP_SECURE
        value: "true"
      - name: SMTP_USER
      - name: STORAGE_FOLDER
        value: /storage/files
      - name: BATCH_ROOT_FOLDER
        value: batch
      - name: CACHE_FOLDER
        value: /storage/cache
      - name: SMARTLINK_FOLDER
        value: smartlinks
      - name: TOWER_ENV
        value: newDev
      - name: AXEPTIO_ENABLED
        value: "false"
      - name: SHOW_MOBILE_WELCOME
        value: "false"
      - name: URL_TO_STATS
      - name: STORAGE_URL
        value: https://k8s-files.argoflow.io
      - name: DEFAULT_LANGUAGE_ID
        value: "2"
      - name: DEFAULT_TIME_ZONE
        value: Asia/Tokyo
      image: argoteam/argoflow-smartlink-creator:2.20
      imagePullPolicy: Always
      name: smartlink-creator
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /storage
        name: efs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-shh2r
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: efs
      persistentVolumeClaim:
        claimName: efs-claim
    - name: kube-api-access-shh2r
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9f014620222b0dce04a0b7538da79f5228b813acc73ec41c8c400758060e4b74
      image: docker.io/argoteam/argoflow-smartlink-creator:2.20
      imageID: docker.io/argoteam/argoflow-smartlink-creator@sha256:b8916b1005b59c03fb460951d4a14552bb7a39ac8d31037e342d18d22e012a32
      lastState: {}
      name: smartlink-creator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-13T10:28:19Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.15.155
    podIPs:
    - ip: 192.168.15.155
    qosClass: BestEffort
    startTime: "2024-06-13T10:28:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      timestamp: 20240613-122811
    creationTimestamp: "2024-06-13T10:28:17Z"
    generateName: sso-59f7d698bc-
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 59f7d698bc
    name: sso-59f7d698bc-8hjwv
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: sso-59f7d698bc
      uid: ed33fc34-7e7e-4c16-9665-83cc1a4d5e75
    resourceVersion: "273034104"
    uid: 43e73c3b-c563-4b7d-81cb-2788bb453f05
  spec:
    containers:
    - command:
      - ./main
      env:
      - name: SSO_JWT_SECRET
        valueFrom:
          secretKeyRef:
            key: JWT_SECRET
            name: sso-secret
      - name: SSO_MASTER_PASSWORD
        valueFrom:
          secretKeyRef:
            key: MASTER_PASSWORD
            name: sso-secret
      - name: SSO_ISSUER
        value: k8s-sso.argoflow.io
      - name: SSO_MYSQL_HOST
        value: mysql-service
      - name: SSO_MYSQL_PORT
        value: "3306"
      - name: SSO_MYSQL_SCHEME
        value: sso
      - name: SSO_MYSQL_USER
        valueFrom:
          secretKeyRef:
            key: MYSQL_LOGIN
            name: sso-secret
      - name: SSO_MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            key: MYSQL_PASSWORD
            name: sso-secret
      - name: SSO_CHECK_SESSION
        value: "false"
      - name: SSO_EVENT_SERVER_HOST
        value: https://statsdev.bear2b.com
      - name: SSO_GAR_ENABLED
        value: "false"
      image: argoteam/sso2:2.20
      imagePullPolicy: Always
      name: sso
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-67ftx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: ip-192-168-30-153.eu-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-67ftx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-13T10:28:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c566209a4c04f0372de7781377fc2c57db2e7f08801711caca863c6cb8ce62ad
      image: docker.io/argoteam/sso2:2.20
      imageID: docker.io/argoteam/sso2@sha256:2fcded7c96d050871e01ca82d67ff9689bde8e876d54c0c8534f59bfbf1743c0
      lastState: {}
      name: sso
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-13T10:28:19Z"
    hostIP: 192.168.30.153
    hostIPs:
    - ip: 192.168.30.153
    phase: Running
    podIP: 192.168.5.177
    podIPs:
    - ip: 192.168.5.177
    qosClass: BestEffort
    startTime: "2024-06-13T10:28:17Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2021-09-22T09:17:51Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: api-service
    namespace: argoflow
    resourceVersion: "4144308"
    uid: b0534a03-6516-474a-8c30-a1c0ad108ce1
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.62.197
    clusterIPs:
    - 10.100.62.197
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30353
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: argoflow-api-v2
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: ab0534a036516474a8c30a1c0ad108ce-835617766.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-02-15T14:57:10Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: clickhouse-bulk-service
    namespace: argoflow
    resourceVersion: "237611124"
    uid: 337014a6-b1fd-4210-ba22-954d55bfc15c
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.113.123
    clusterIPs:
    - 10.100.113.123
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      nodePort: 32323
      port: 8124
      protocol: TCP
      targetPort: 8124
    selector:
      component: clickhouse-bulk
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a337014a6b1fd4210ba22954d55bfc15-1947528276.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2023-05-26T08:12:09Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: clickhouse-proxy-service
    namespace: argoflow
    resourceVersion: "163139678"
    uid: 16cbac13-6b3c-4222-bfc4-0c00b5e4a494
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.143.162
    clusterIPs:
    - 10.100.143.162
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      nodePort: 30972
      port: 80
      protocol: TCP
      targetPort: 80
    - name: udp
      nodePort: 30736
      port: 8091
      protocol: TCP
      targetPort: 8091
    selector:
      component: clickhouse-proxy
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a16cbac136b3c4222bfc40c00b5e4a49-764707444.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2023-02-07T11:10:27Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: clickhouse-service
    namespace: argoflow
    resourceVersion: "130825267"
    uid: 3dad2ced-ab37-4e30-8110-e97c0aeb4300
  spec:
    clusterIP: 10.100.0.73
    clusterIPs:
    - 10.100.0.73
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: external
      port: 8123
      protocol: TCP
      targetPort: 8123
    - name: internal
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      component: clickhouse
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2021-09-30T12:57:19Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: editor-service
    namespace: argoflow
    resourceVersion: "5923260"
    uid: cf97cabf-5157-4b8b-9a0c-9f329b8ca0c2
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.94.133
    clusterIPs:
    - 10.100.94.133
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30245
      port: 80
      protocol: TCP
      targetPort: 4445
    selector:
      name: editor
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: acf97cabf51574b8b9a0c9f329b8ca0c-913952360.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-23T14:44:15Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: files-service
    namespace: argoflow
    resourceVersion: "4409398"
    uid: aaf0a7b4-549a-4715-b777-cd3c3dcf7388
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.252.216
    clusterIPs:
    - 10.100.252.216
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32670
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: files
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: aaaf0a7b4549a4715b777cd3c3dcf738-1187274766.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2021-10-01T09:43:30Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: manager-service
    namespace: argoflow
    resourceVersion: "228007955"
    uid: b0959c9c-30d5-4893-9c0d-b3e2e85d3aaf
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.78.74
    clusterIPs:
    - 10.100.78.74
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30887
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: manager
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: ab0959c9c30d548939c0db3e2e85d3aa-463871674.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2021-09-22T09:17:51Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mongo-compass
    namespace: argoflow
    resourceVersion: "4144288"
    uid: 99a9b5db-e439-408c-92a7-8076a0112962
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.100.20
    clusterIPs:
    - 10.100.100.20
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    loadBalancerSourceRanges:
    - 192.168.0.0/16
    ports:
    - name: mongo
      nodePort: 32042
      port: 27017
      protocol: TCP
      targetPort: 27017
    - name: metrics
      nodePort: 32221
      port: 9216
      protocol: TCP
      targetPort: 9216
    selector:
      component: mongo
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a99a9b5dbe439408c92a78076a011296-1620810126.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-22T09:17:51Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mongo-service
    namespace: argoflow
    resourceVersion: "4144176"
    uid: aaf5d9cf-b79a-4ac8-ab02-191a87778227
  spec:
    clusterIP: 10.100.34.52
    clusterIPs:
    - 10.100.34.52
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      component: mongo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2024-01-11T15:09:28Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mysql-external
    namespace: argoflow
    resourceVersion: "228018417"
    uid: a238d724-6273-4658-9a27-5f09e1c02604
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.148.210
    clusterIPs:
    - 10.100.148.210
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: mysql
      nodePort: 31131
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      component: mysql
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: aa238d724627346589a275f09e1c0260-1380689852.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-01-11T14:15:17Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mysql-service
    namespace: argoflow
    resourceVersion: "228007224"
    uid: b39fb23b-9aae-481e-906b-62bc929e33af
  spec:
    clusterIP: 10.100.101.232
    clusterIPs:
    - 10.100.101.232
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      component: mysql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-22T09:17:51Z"
    labels:
      app.kubernetes.io/managed-by: Helm
    name: redis-service
    namespace: argoflow
    resourceVersion: "4144170"
    uid: 208042af-9578-485b-b235-7bf5a3448bc6
  spec:
    clusterIP: 10.100.168.34
    clusterIPs:
    - 10.100.168.34
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      component: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2021-09-23T14:15:38Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: sl-service
    namespace: argoflow
    resourceVersion: "4404816"
    uid: 1de7ecc3-416b-4c26-9b8f-710a2ef327a6
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.82.215
    clusterIPs:
    - 10.100.82.215
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 32534
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: smartlink-creator
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a1de7ecc3416b4c269b8f710a2ef327a-1661177620.eu-west-1.elb.amazonaws.com
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
      service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: sg-0f123571c976822ae
    creationTimestamp: "2024-01-11T14:18:03Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/managed-by: Helm
    name: sso
    namespace: argoflow
    resourceVersion: "228008085"
    uid: 866538c3-9bc5-4eb2-aff5-a24a8e346f0b
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.100.101.112
    clusterIPs:
    - 10.100.101.112
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31586
      port: 80
      protocol: TCP
      targetPort: 8090
    selector:
      name: sso
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - hostname: a866538c39bc54eb2aff5a24a8e346f0-510328587.eu-west-1.elb.amazonaws.com
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "266"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-22T09:17:51Z"
    generation: 266
    labels:
      app.kubernetes.io/managed-by: Helm
    name: argoflow-api-v2
    namespace: argoflow
    resourceVersion: "273034306"
    uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: argoflow-api-v2
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.20
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-09-22T09:17:51Z"
      lastUpdateTime: "2021-09-22T09:17:51Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-04-11T11:58:25Z"
      lastUpdateTime: "2024-06-13T10:29:06Z"
      message: ReplicaSet "argoflow-api-v2-596f9fd658" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 266
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2023-05-26T08:12:10Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: clickhouse-proxy
    namespace: argoflow
    resourceVersion: "257061038"
    uid: c80f8349-f95c-4894-887a-3b4b54281224
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: clickhouse-proxy
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: clickhouse-proxy
      spec:
        containers:
        - env:
          - name: CLICKHOUSE_INGESTOR
            value: http://clickhouse-bulk-service:8124
          image: argoteam/clickhouse-proxy:dev
          imagePullPolicy: IfNotPresent
          name: clickhouse-proxy
          ports:
          - containerPort: 80
            name: tcp
            protocol: TCP
          - containerPort: 8091
            name: udp
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-05-26T08:12:10Z"
      lastUpdateTime: "2023-05-26T08:12:20Z"
      message: ReplicaSet "clickhouse-proxy-5d75477979" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-04-22T10:26:44Z"
      lastUpdateTime: "2024-04-22T10:26:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "191"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-30T12:57:20Z"
    generation: 191
    labels:
      app.kubernetes.io/managed-by: Helm
    name: editor
    namespace: argoflow
    resourceVersion: "273034077"
    uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: editor
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.20
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-09-30T12:57:20Z"
      lastUpdateTime: "2021-09-30T12:57:20Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-04-11T11:22:00Z"
      lastUpdateTime: "2024-06-13T10:28:19Z"
      message: ReplicaSet "editor-56bdb6f877" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 191
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-24T10:11:23Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
    name: files-deployment
    namespace: argoflow
    resourceVersion: "257061060"
    uid: 909d68df-7648-4b3b-b7b6-64dd9914ff26
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: files
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: files
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx
            name: files-conf
            readOnly: true
          - mountPath: /var/log/nginx
            name: log
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: nginx.conf
              path: nginx.conf
            - key: mime.types
              path: mime.types
            name: files-conf
          name: files-conf
        - emptyDir: {}
          name: log
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-09-24T10:11:23Z"
      lastUpdateTime: "2021-09-24T10:11:23Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2021-09-24T10:11:23Z"
      lastUpdateTime: "2021-09-24T10:29:16Z"
      message: ReplicaSet "files-deployment-5d5946d6bb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "46"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-01-11T14:18:05Z"
    generation: 46
    labels:
      app.kubernetes.io/managed-by: Helm
    name: manager
    namespace: argoflow
    resourceVersion: "273034097"
    uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: manager
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.20
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-01-11T14:18:05Z"
      lastUpdateTime: "2024-01-11T14:18:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-04-11T11:21:56Z"
      lastUpdateTime: "2024-06-13T10:28:20Z"
      message: ReplicaSet "manager-7bf747fdf" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 46
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-22T09:17:51Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: redis
    namespace: argoflow
    resourceVersion: "257061034"
    uid: cdea0dda-2c53-444b-b3cb-62f59918fe41
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: redis
      spec:
        containers:
        - image: redis
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-09-22T09:17:51Z"
      lastUpdateTime: "2021-09-22T09:17:54Z"
      message: ReplicaSet "redis-78c756c888" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2024-04-22T10:26:44Z"
      lastUpdateTime: "2024-04-22T10:26:44Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "250"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-23T14:19:57Z"
    generation: 250
    labels:
      app.kubernetes.io/managed-by: Helm
    name: smartlink-creator
    namespace: argoflow
    resourceVersion: "273034114"
    uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: smartlink-creator
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.20
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2021-09-23T14:19:58Z"
      lastUpdateTime: "2021-09-23T14:19:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-04-11T11:29:32Z"
      lastUpdateTime: "2024-06-13T10:28:20Z"
      message: ReplicaSet "smartlink-creator-765cbddf7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 250
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "46"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-01-11T14:15:19Z"
    generation: 46
    labels:
      app.kubernetes.io/managed-by: Helm
    name: sso
    namespace: argoflow
    resourceVersion: "273034109"
    uid: a5f11e9c-c9a2-445f-8574-952070747071
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        name: sso
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.20
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2024-01-11T14:15:19Z"
      lastUpdateTime: "2024-01-11T14:15:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2024-04-11T11:12:36Z"
      lastUpdateTime: "2024-06-13T10:28:20Z"
      message: ReplicaSet "sso-59f7d698bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 46
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "266"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T10:28:16Z"
    generation: 1
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 596f9fd658
    name: argoflow-api-v2-596f9fd658
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "273034304"
    uid: 61f0c00c-bf63-4957-a58a-951ba4771d1f
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 596f9fd658
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 596f9fd658
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.20
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "258"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:49:00Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 5b9464f4c7
    name: argoflow-api-v2-5b9464f4c7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "244767600"
    uid: 84256ac4-2008-440a-aaaf-1fd16a9a6aca
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 5b9464f4c7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240312-154854
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 5b9464f4c7
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "260"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:01:10Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 64f6b6565f
    name: argoflow-api-v2-64f6b6565f
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "250066351"
    uid: a9dc4751-87ef-4143-a353-671e35411bb3
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 64f6b6565f
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240329-110104
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 64f6b6565f
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "264"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-09T14:35:49Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 664477d9ff
    name: argoflow-api-v2-664477d9ff
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "273020198"
    uid: 977e6e99-3059-4dd3-8653-a21ff5cdb725
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 664477d9ff
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240409-163542
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 664477d9ff
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.20
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "259"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:57:01Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 668dd6ccf7
    name: argoflow-api-v2-668dd6ccf7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "250057829"
    uid: 384e65b6-06f5-4dda-a867-d11c1542a17c
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 668dd6ccf7
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240312-155655
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 668dd6ccf7
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "256"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:46:42Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 6cd7d6b647
    name: argoflow-api-v2-6cd7d6b647
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "244765305"
    uid: 63f17bf5-339e-4f02-a573-afc0c2714ffa
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 6cd7d6b647
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240312-154636
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 6cd7d6b647
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "263"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-04T13:01:35Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 796f954f88
    name: argoflow-api-v2-796f954f88
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "253447101"
    uid: c8b0cbd8-2b1e-4539-b385-5b7874762886
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 796f954f88
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240404-150129
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 796f954f88
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.20
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "262"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-03T09:00:14Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: 7dcb5cccb
    name: argoflow-api-v2-7dcb5cccb
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "251956969"
    uid: cb3c31a0-6542-49b0-bb95-3c8f138d914e
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: 7dcb5cccb
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240403-110007
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: 7dcb5cccb
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "257"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:47:27Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: cb4676b
    name: argoflow-api-v2-cb4676b
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "244765822"
    uid: f8cf11d9-2678-44e4-a098-8b4dfc85c3b2
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: cb4676b
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240312-154721
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: cb4676b
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "265"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T09:27:23Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: fc4cdffb8
    name: argoflow-api-v2-fc4cdffb8
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "273033901"
    uid: 433bdff5-3495-41f7-a82c-7a1baef59acc
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: fc4cdffb8
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240613-112717
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: fc4cdffb8
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.20
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "261"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:39:50Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: argoflow-api-v2
      pod-template-hash: fc7b959c4
    name: argoflow-api-v2-fc7b959c4
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: argoflow-api-v2
      uid: e01239a2-f9c6-4c3a-8fb7-9faf0b9197e2
    resourceVersion: "251595021"
    uid: 138c801f-4482-43ba-ad59-8f253c8b753e
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: argoflow-api-v2
        pod-template-hash: fc7b959c4
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "2021-10-06T17:56:34+02:00"
          timestamp: 20240329-113944
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: argoflow-api-v2
          pod-template-hash: fc7b959c4
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_CONFIG_B64
            valueFrom:
              secretKeyRef:
                key: AF_API_CONFIG_B64
                name: af-api-secrets
          image: argoteam/argoflow-api-v2:2.19
          imagePullPolicy: Always
          name: argoflow-api-v2
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2023-05-26T08:12:10Z"
    generation: 1
    labels:
      component: clickhouse-proxy
      pod-template-hash: 5d75477979
    name: clickhouse-proxy-5d75477979
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: clickhouse-proxy
      uid: c80f8349-f95c-4894-887a-3b4b54281224
    resourceVersion: "257061037"
    uid: 388895a8-33e6-4740-bfcb-5740d5f43147
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: clickhouse-proxy
        pod-template-hash: 5d75477979
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: clickhouse-proxy
          pod-template-hash: 5d75477979
      spec:
        containers:
        - env:
          - name: CLICKHOUSE_INGESTOR
            value: http://clickhouse-bulk-service:8124
          image: argoteam/clickhouse-proxy:dev
          imagePullPolicy: IfNotPresent
          name: clickhouse-proxy
          ports:
          - containerPort: 80
            name: tcp
            protocol: TCP
          - containerPort: 8091
            name: udp
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "191"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T10:28:17Z"
    generation: 1
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 56bdb6f877
    name: editor-56bdb6f877
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "273034072"
    uid: de1f1c33-3097-4e07-a32a-cc5d250c06cc
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 56bdb6f877
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 56bdb6f877
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.20
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "182"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:47:28Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 5976dc7fd9
    name: editor-5976dc7fd9
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "244765880"
    uid: cfde4007-bff3-4f4f-9b0c-0256a08218f8
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 5976dc7fd9
    template:
      metadata:
        annotations:
          timestamp: 20240312-154721
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 5976dc7fd9
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "186"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:39:51Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 5cb7dd9d69
    name: editor-5cb7dd9d69
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "251595081"
    uid: 97559497-51a6-429b-becd-34f93fcdb764
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 5cb7dd9d69
    template:
      metadata:
        annotations:
          timestamp: 20240329-113944
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 5cb7dd9d69
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "188"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-04T13:01:36Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 648d4b84f9
    name: editor-648d4b84f9
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "253447151"
    uid: 080e98a2-3b27-4813-8bc9-cb5ee4848834
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 648d4b84f9
    template:
      metadata:
        annotations:
          timestamp: 20240404-150129
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 648d4b84f9
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.20
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "181"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:46:43Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 659cdd6568
    name: editor-659cdd6568
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "244765356"
    uid: daa9d6cb-22c6-4dd4-b614-74757be1a08b
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 659cdd6568
    template:
      metadata:
        annotations:
          timestamp: 20240312-154636
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 659cdd6568
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "189"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-09T14:35:50Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 6cfdf87448
    name: editor-6cfdf87448
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "273020254"
    uid: d60127c2-80da-4c83-8b3c-596d810e193e
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 6cfdf87448
    template:
      metadata:
        annotations:
          timestamp: 20240409-163542
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 6cfdf87448
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.20
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "184"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:57:02Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 6dcd5df566
    name: editor-6dcd5df566
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "250057873"
    uid: a6d48cd9-42b3-42db-bfcf-76d3ba95e4f7
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 6dcd5df566
    template:
      metadata:
        annotations:
          timestamp: 20240312-155655
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 6dcd5df566
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "183"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:49:01Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 76c8cd7f78
    name: editor-76c8cd7f78
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "244767652"
    uid: 76de8eed-e6d7-4739-a040-510231a17894
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 76c8cd7f78
    template:
      metadata:
        annotations:
          timestamp: 20240312-154854
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 76c8cd7f78
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "185"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:01:10Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 785747d448
    name: editor-785747d448
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "250066404"
    uid: 52fca82f-c022-4e8f-a553-4dd54e96f092
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 785747d448
    template:
      metadata:
        annotations:
          timestamp: 20240329-110104
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 785747d448
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "187"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-03T09:00:15Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 7dd5f85dd7
    name: editor-7dd5f85dd7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "251957024"
    uid: 4b6e4482-7a0d-44f3-80bc-e2510d044c0f
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 7dd5f85dd7
    template:
      metadata:
        annotations:
          timestamp: 20240403-110007
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 7dd5f85dd7
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.19
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "190"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T09:27:23Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: editor
      pod-template-hash: 84674f747
    name: editor-84674f747
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: editor
      uid: 5eb44869-ee29-46f7-96c4-d6ec09254061
    resourceVersion: "273033956"
    uid: 6562dfd3-483a-433d-b574-297ba72ecc8c
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: editor
        pod-template-hash: 84674f747
    template:
      metadata:
        annotations:
          timestamp: 20240613-112717
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: editor
          pod-template-hash: 84674f747
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: ALLOWED_DOMAINS_LIST
            value: '*.argoflow.io'
          - name: AURA_HOST
            value: https://k8s-files.argoflow.io
          image: argoteam/ar-editor:2.20
          imagePullPolicy: Always
          name: editor
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: editor-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: editor-conf
          name: editor-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-24T10:11:23Z"
    generation: 2
    labels:
      name: files
      pod-template-hash: 58c464d5ff
    name: files-deployment-58c464d5ff
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: files-deployment
      uid: 909d68df-7648-4b3b-b7b6-64dd9914ff26
    resourceVersion: "4589919"
    uid: e1aee33a-dccd-4136-937a-78779b4f7cb0
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: files
        pod-template-hash: 58c464d5ff
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: files
          pod-template-hash: 58c464d5ff
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx
            name: files-conf
            readOnly: true
          - mountPath: /var/log/nginx
            name: log
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: nginx.conf
              path: nginx.conf
            name: files-conf
          name: files-conf
        - emptyDir: {}
          name: log
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-24T10:29:12Z"
    generation: 1
    labels:
      name: files
      pod-template-hash: 5d5946d6bb
    name: files-deployment-5d5946d6bb
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: files-deployment
      uid: 909d68df-7648-4b3b-b7b6-64dd9914ff26
    resourceVersion: "257061058"
    uid: a71368e4-b42f-4622-968c-78abedd0e946
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: files
        pod-template-hash: 5d5946d6bb
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: files
          pod-template-hash: 5d5946d6bb
      spec:
        containers:
        - image: nginx
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx
            name: files-conf
            readOnly: true
          - mountPath: /var/log/nginx
            name: log
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: nginx.conf
              path: nginx.conf
            - key: mime.types
              path: mime.types
            name: files-conf
          name: files-conf
        - emptyDir: {}
          name: log
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:39:51Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 54d5f8b6f7
    name: manager-54d5f8b6f7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "251595108"
    uid: fa2a1f91-b162-47d9-9bcb-0f2121ae3544
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 54d5f8b6f7
    template:
      metadata:
        annotations:
          timestamp: 20240329-113944
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 54d5f8b6f7
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-04T13:01:36Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 54d66d8ff9
    name: manager-54d66d8ff9
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "253447173"
    uid: 72995215-0ac7-45ef-a33c-2fa9f6f36841
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 54d66d8ff9
    template:
      metadata:
        annotations:
          timestamp: 20240404-150129
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 54d66d8ff9
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.20
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "42"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-03T09:00:15Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 568bf8fb7f
    name: manager-568bf8fb7f
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "251957050"
    uid: 0ce507a9-28d5-4c2d-b69c-0bcb7df7d688
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 568bf8fb7f
    template:
      metadata:
        annotations:
          timestamp: 20240403-110007
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 568bf8fb7f
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "39"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:57:02Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 57455cb48d
    name: manager-57455cb48d
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "250057895"
    uid: e64302ab-70c6-431a-b495-b9191bb8bdab
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 57455cb48d
    template:
      metadata:
        annotations:
          timestamp: 20240312-155655
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 57455cb48d
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "37"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:47:28Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 57cd649f77
    name: manager-57cd649f77
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "244765900"
    uid: 52aabcb3-6483-407b-a743-656f2e54ded4
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 57cd649f77
    template:
      metadata:
        annotations:
          timestamp: 20240312-154721
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 57cd649f77
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "40"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:01:11Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 5c8df87f7d
    name: manager-5c8df87f7d
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "250066426"
    uid: b1f32caf-f46c-4e2b-b1fc-332f3e8cbd21
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 5c8df87f7d
    template:
      metadata:
        annotations:
          timestamp: 20240329-110104
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 5c8df87f7d
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-09T14:35:50Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 5d958fff8
    name: manager-5d958fff8
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "273020275"
    uid: 4cc39f5b-6fde-4a23-b372-7f03bcb717c9
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 5d958fff8
    template:
      metadata:
        annotations:
          timestamp: 20240409-163542
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 5d958fff8
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.20
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "36"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:46:43Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 5dfbc4f898
    name: manager-5dfbc4f898
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "244765381"
    uid: 41e8115e-1e93-478e-9672-886c2078af93
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 5dfbc4f898
    template:
      metadata:
        annotations:
          timestamp: 20240312-154636
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 5dfbc4f898
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "38"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:49:01Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 65bbb88c96
    name: manager-65bbb88c96
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "244767675"
    uid: a6f37290-461c-420b-a272-d0549ac99d99
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 65bbb88c96
    template:
      metadata:
        annotations:
          timestamp: 20240312-154854
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 65bbb88c96
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.19
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T09:27:23Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 7545b86d5f
    name: manager-7545b86d5f
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "273033979"
    uid: 3c7b1967-1ed2-435f-8015-c1c724ea65e3
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 7545b86d5f
    template:
      metadata:
        annotations:
          timestamp: 20240613-112717
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 7545b86d5f
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.20
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T10:28:17Z"
    generation: 1
    labels:
      cluster: eks-argoflow-master
      name: manager
      pod-template-hash: 7bf747fdf
    name: manager-7bf747fdf
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: manager
      uid: ba31c6cf-6fa8-41f3-b7d7-207407dfb4cf
    resourceVersion: "273034092"
    uid: 1ea8b7ba-1cfe-4fb5-a660-e95b4ebd30ad
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: manager
        pod-template-hash: 7bf747fdf
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: manager
          pod-template-hash: 7bf747fdf
      spec:
        containers:
        - image: argoteam/argoflow-ui:2.20
          imagePullPolicy: Always
          name: manager
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/share/nginx/html/assets/app-config.json
            name: manager-conf
            readOnly: true
            subPath: app-config.json
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: manager-conf
          name: manager-conf
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-22T09:17:51Z"
    generation: 1
    labels:
      component: redis
      pod-template-hash: 78c756c888
    name: redis-78c756c888
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis
      uid: cdea0dda-2c53-444b-b3cb-62f59918fe41
    resourceVersion: "257061032"
    uid: dea707e7-25aa-4283-a7f9-891ab053c20e
  spec:
    replicas: 1
    selector:
      matchLabels:
        component: redis
        pod-template-hash: 78c756c888
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: redis
          pod-template-hash: 78c756c888
      spec:
        containers:
        - image: redis
          imagePullPolicy: Always
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "244"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:01:10Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 564cf9d588
    name: smartlink-creator-564cf9d588
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "250066380"
    uid: 6d325a1c-0074-49a9-af80-42a2d6ff9907
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 564cf9d588
    template:
      metadata:
        annotations:
          timestamp: 20240329-110104
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 564cf9d588
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "243"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:57:01Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 5c847454bb
    name: smartlink-creator-5c847454bb
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "250057850"
    uid: 3d10d7d8-6b4a-4b3f-8082-19c28f11ef78
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 5c847454bb
    template:
      metadata:
        annotations:
          timestamp: 20240312-155655
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 5c847454bb
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "246"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-03T09:00:15Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 5cf8d9d989
    name: smartlink-creator-5cf8d9d989
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "251957002"
    uid: fcd49d19-e1fd-4923-a6d7-c735bcbc288c
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 5cf8d9d989
    template:
      metadata:
        annotations:
          timestamp: 20240403-110007
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 5cf8d9d989
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "248"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-09T14:35:49Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 66494ccc78
    name: smartlink-creator-66494ccc78
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "273020220"
    uid: 1b094126-f8b2-44aa-8350-a0193fcf1f3f
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 66494ccc78
    template:
      metadata:
        annotations:
          timestamp: 20240409-163542
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 66494ccc78
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.20
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "249"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T09:27:23Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: "6895689667"
    name: smartlink-creator-6895689667
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "273033934"
    uid: 7ad7ff5b-34c8-424f-9d70-f5dda2106a2f
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: "6895689667"
    template:
      metadata:
        annotations:
          timestamp: 20240613-112717
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: "6895689667"
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.20
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "242"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:49:00Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 6d99f54778
    name: smartlink-creator-6d99f54778
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "244767630"
    uid: da4ec0f8-bea2-4cd9-a664-6f5edaca06ba
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 6d99f54778
    template:
      metadata:
        annotations:
          timestamp: 20240312-154854
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 6d99f54778
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "245"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:39:50Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 6db6cf95f5
    name: smartlink-creator-6db6cf95f5
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "251595054"
    uid: 9eca91a6-1952-4552-8fb8-a81143f94f1e
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 6db6cf95f5
    template:
      metadata:
        annotations:
          timestamp: 20240329-113944
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 6db6cf95f5
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "250"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T10:28:17Z"
    generation: 1
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: 765cbddf7
    name: smartlink-creator-765cbddf7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "273034112"
    uid: 166897b6-d506-4772-b360-7ee08dbed135
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: 765cbddf7
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: 765cbddf7
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.20
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "241"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:47:27Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: ccfb545dc
    name: smartlink-creator-ccfb545dc
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "244765853"
    uid: 90761373-c53c-4029-a264-cdb5e103a0b3
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: ccfb545dc
    template:
      metadata:
        annotations:
          timestamp: 20240312-154721
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: ccfb545dc
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "247"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-04T13:01:36Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: d66bdf5f7
    name: smartlink-creator-d66bdf5f7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "253447126"
    uid: 3dfd8061-b1a3-4039-a5e5-aa16ac6bb85f
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: d66bdf5f7
    template:
      metadata:
        annotations:
          timestamp: 20240404-150129
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: d66bdf5f7
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.20
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "240"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:46:43Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: smartlink-creator
      pod-template-hash: dbcfcb6f6
    name: smartlink-creator-dbcfcb6f6
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: smartlink-creator
      uid: cb51e5c8-5163-4a66-b33e-2e66d0992326
    resourceVersion: "244765332"
    uid: f60daa9e-c72a-4a3c-83cf-681c1062a2c7
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: smartlink-creator
        pod-template-hash: dbcfcb6f6
    template:
      metadata:
        annotations:
          timestamp: 20240312-154636
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: smartlink-creator
          pod-template-hash: dbcfcb6f6
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: development
          - name: AF_API_URL
            value: https://k8s-api.argoflow.io
          - name: AF_API_TOKEN
            valueFrom:
              secretKeyRef:
                key: AF_API_TOKEN
                name: af-api-secrets
          - name: AF_TRACK_URL
            value: https://k8s-track.argoflow.io
          - name: AF_UI_URL
            value: https://k8s-ui.argoflow.io
          - name: EVENTS_SERVER
            value: https://statsdev.bear2b.com
          - name: KEEEX_BINARY
            value: fkeeex-linux
          - name: KEEEX_PASSPHRASE
            valueFrom:
              secretKeyRef:
                key: KEEEX_PASSPHRASE
                name: af-api-secrets
          - name: PORT
            value: "80"
          - name: PROTOCOL
          - name: SAVE_LAST_GULP_OPERATION_LOG
            value: "true"
          - name: SCRIPT_HOST
            value: https://k8s-scripts.argoflow.io
          - name: SMTP_HOST
            value: smtp.mail.ru
          - name: SMTP_PASS
            valueFrom:
              secretKeyRef:
                key: SMTP_PASS
                name: af-api-secrets
          - name: SMTP_PORT
            value: "465"
          - name: SMTP_SECURE
            value: "true"
          - name: SMTP_USER
          - name: STORAGE_FOLDER
            value: /storage/files
          - name: BATCH_ROOT_FOLDER
            value: batch
          - name: CACHE_FOLDER
            value: /storage/cache
          - name: SMARTLINK_FOLDER
            value: smartlinks
          - name: TOWER_ENV
            value: newDev
          - name: AXEPTIO_ENABLED
            value: "false"
          - name: SHOW_MOBILE_WELCOME
            value: "false"
          - name: URL_TO_STATS
          - name: STORAGE_URL
            value: https://k8s-files.argoflow.io
          - name: DEFAULT_LANGUAGE_ID
            value: "2"
          - name: DEFAULT_TIME_ZONE
            value: Asia/Tokyo
          image: argoteam/argoflow-smartlink-creator:2.19
          imagePullPolicy: Always
          name: smartlink-creator
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /storage
            name: efs
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: efs
          persistentVolumeClaim:
            claimName: efs-claim
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "42"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-03T09:00:16Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: "5848485957"
    name: sso-5848485957
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "251957072"
    uid: 1dd3aacb-2c79-496f-a00e-e426b4c80316
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: "5848485957"
    template:
      metadata:
        annotations:
          timestamp: 20240403-110007
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: "5848485957"
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "46"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T10:28:17Z"
    generation: 1
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 59f7d698bc
    name: sso-59f7d698bc
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "273034106"
    uid: ed33fc34-7e7e-4c16-9665-83cc1a4d5e75
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 59f7d698bc
    template:
      metadata:
        annotations:
          timestamp: 20240613-122811
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 59f7d698bc
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.20
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "44"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-09T14:35:50Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 5d56f44bcb
    name: sso-5d56f44bcb
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "273020299"
    uid: ffbd3f1e-d3c6-4a34-a46b-98f9ec2adeb8
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 5d56f44bcb
    template:
      metadata:
        annotations:
          timestamp: 20240409-163542
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 5d56f44bcb
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.20
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "37"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:47:28Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 5ff564d85f
    name: sso-5ff564d85f
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "244765923"
    uid: 182970cb-5227-4ef8-9af3-2db91695d333
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 5ff564d85f
    template:
      metadata:
        annotations:
          timestamp: 20240312-154721
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 5ff564d85f
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "43"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-04T13:01:37Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 64bf8dcff7
    name: sso-64bf8dcff7
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "253447195"
    uid: 58a937f5-1357-4deb-8bd7-d0b0d6a0d619
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 64bf8dcff7
    template:
      metadata:
        annotations:
          timestamp: 20240404-150129
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 64bf8dcff7
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.20
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "45"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-06-13T09:27:24Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 65bf4bdb45
    name: sso-65bf4bdb45
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "273034005"
    uid: 2b6f4374-650f-4f0e-bb5c-2d96c404a121
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 65bf4bdb45
    template:
      metadata:
        annotations:
          timestamp: 20240613-112717
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 65bf4bdb45
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.20
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "41"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:39:51Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 76bc54899
    name: sso-76bc54899
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "251595132"
    uid: ea076a10-1bae-41c9-ad64-d6ff195290e4
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 76bc54899
    template:
      metadata:
        annotations:
          timestamp: 20240329-113944
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 76bc54899
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "39"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:57:02Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 7b58666d78
    name: sso-7b58666d78
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "250057919"
    uid: 7cdc1108-fe17-4a3f-80f7-f93e53f7b745
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 7b58666d78
    template:
      metadata:
        annotations:
          timestamp: 20240312-155655
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 7b58666d78
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "40"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-29T10:01:11Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: 7f5d64d96d
    name: sso-7f5d64d96d
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "250066450"
    uid: 6a816cb8-74ee-434c-9487-661a4bb21558
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: 7f5d64d96d
    template:
      metadata:
        annotations:
          timestamp: 20240329-110104
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: 7f5d64d96d
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "36"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:46:43Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: b4655468d
    name: sso-b4655468d
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "244765404"
    uid: 223cd141-17a1-4493-b1e8-726d5c998e15
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: b4655468d
    template:
      metadata:
        annotations:
          timestamp: 20240312-154636
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: b4655468d
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "38"
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-03-12T14:49:01Z"
    generation: 2
    labels:
      cluster: eks-argoflow-master
      name: sso
      pod-template-hash: cc9fccf74
    name: sso-cc9fccf74
    namespace: argoflow
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sso
      uid: a5f11e9c-c9a2-445f-8574-952070747071
    resourceVersion: "244767696"
    uid: c4c9f9e5-a0e8-4890-9730-fa6b2ab69de4
  spec:
    replicas: 0
    selector:
      matchLabels:
        name: sso
        pod-template-hash: cc9fccf74
    template:
      metadata:
        annotations:
          timestamp: 20240312-154854
        creationTimestamp: null
        labels:
          cluster: eks-argoflow-master
          name: sso
          pod-template-hash: cc9fccf74
      spec:
        containers:
        - command:
          - ./main
          env:
          - name: SSO_JWT_SECRET
            valueFrom:
              secretKeyRef:
                key: JWT_SECRET
                name: sso-secret
          - name: SSO_MASTER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MASTER_PASSWORD
                name: sso-secret
          - name: SSO_ISSUER
            value: k8s-sso.argoflow.io
          - name: SSO_MYSQL_HOST
            value: mysql-service
          - name: SSO_MYSQL_PORT
            value: "3306"
          - name: SSO_MYSQL_SCHEME
            value: sso
          - name: SSO_MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: SSO_MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: SSO_CHECK_SESSION
            value: "false"
          - name: SSO_EVENT_SERVER_HOST
            value: https://statsdev.bear2b.com
          - name: SSO_GAR_ENABLED
            value: "false"
          image: argoteam/sso2:2.19
          imagePullPolicy: Always
          name: sso
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2023-02-07T11:10:29Z"
    generation: 2
    labels:
      app.kubernetes.io/managed-by: Helm
    name: clickhouse
    namespace: argoflow
    resourceVersion: "257060363"
    uid: ffab1dc0-99bc-4834-b4be-2a4e6ffa50ad
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: clickhouse
    serviceName: clickhouse-service
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: clickhouse
      spec:
        containers:
        - image: clickhouse/clickhouse-server:23.7.4
          imagePullPolicy: IfNotPresent
          name: clickhouse
          ports:
          - containerPort: 8123
            protocol: TCP
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/clickhouse
            name: clickhouse-persistent-volume
            subPath: clickhouse
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: clickhouse-persistent-volume
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 512Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: clickhouse-7c888d494f
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updateRevision: clickhouse-7c888d494f
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-02-15T14:52:38Z"
    generation: 3
    labels:
      app.kubernetes.io/managed-by: Helm
    name: clickhouse-bulk
    namespace: argoflow
    resourceVersion: "273034142"
    uid: d0d7e013-9a02-4cc1-8139-ecd193b07bf2
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: clickhouse-bulk
    serviceName: clickhouse-bulk-service
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: clickhouse-bulk
      spec:
        containers:
        - env:
          - name: CLICKHOUSE_SERVERS
            value: http://clickhouse-service:8123
          - name: CLICKHOUSE_FLUSH_COUNT
            value: "10000"
          - name: CLICKHOUSE_FLUSH_INTERVAL
            value: "5000"
          - name: DUMP_CHECK_INTERVAL
            value: "300"
          - name: CLICKHOUSE_DOWN_TIMEOUT
            value: "180"
          - name: CLICKHOUSE_CONNECT_TIMEOUT
            value: "10"
          - name: CLICKHOUSE_CLEAN_INTERVAL
            value: "30000"
          image: argoteam/clickhouse-bulk:1.1
          imagePullPolicy: IfNotPresent
          name: clickhouse-bulk
          ports:
          - containerPort: 8124
            name: tcp
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/dumps
            name: clickhouse-bulk-persistent-volume
            subPath: clickhouse_bulk
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: clickhouse-bulk-persistent-volume
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: clickhouse-bulk-598789877f
    observedGeneration: 3
    readyReplicas: 1
    replicas: 1
    updateRevision: clickhouse-bulk-598789877f
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2021-09-22T09:17:51Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mongo
    namespace: argoflow
    resourceVersion: "257060301"
    uid: 4327ef4c-3992-4041-91b5-50513d437d6f
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: mongo
    serviceName: mongo-service
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: mongo
      spec:
        containers:
        - image: mongo:4.4
          imagePullPolicy: IfNotPresent
          name: mongo
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data/db
            name: mongo-persistent-volume
            subPath: mongo
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: mongo-persistent-volume
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 24Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: mongo-77f59d998b
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: mongo-77f59d998b
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"StatefulSet","metadata":{"annotations":{"meta.helm.sh/release-name":"argoflow","meta.helm.sh/release-namespace":"argoflow"},"creationTimestamp":"2024-04-12T08:56:06Z","generation":1,"labels":{"app.kubernetes.io/managed-by":"Helm"},"name":"mysql","namespace":"argoflow","resourceVersion":"254346335","uid":"fe97f54f-9715-4a39-aed9-84fbbbb000cc"},"spec":{"persistentVolumeClaimRetentionPolicy":{"whenDeleted":"Retain","whenScaled":"Retain"},"podManagementPolicy":"OrderedReady","replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"component":"mysql"}},"serviceName":"mysql-service","template":{"metadata":{"creationTimestamp":null,"labels":{"component":"mysql"}},"spec":{"containers":[{"args":["--default-authentication-plugin=mysql_native_password"],"env":[{"name":"MYSQL_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"MYSQL_PASSWORD","name":"sso-secret"}}},{"name":"MYSQL_DATABASE","value":"sso"}],"image":"mysql:8.0.35","imagePullPolicy":"IfNotPresent","name":"mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/var/lib/mysql","name":"mysql-persistent-volume","subPath":"mysql"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}},"updateStrategy":{"rollingUpdate":{"partition":0},"type":"RollingUpdate"},"volumeClaimTemplates":[{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"creationTimestamp":null,"name":"mysql-persistent-volume"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"24Gi"}},"volumeMode":"Filesystem"},"status":{"phase":"Pending"}}]},"status":{"availableReplicas":1,"collisionCount":0,"currentReplicas":1,"currentRevision":"mysql-76d569cc9b","observedGeneration":1,"readyReplicas":1,"replicas":1,"updateRevision":"mysql-76d569cc9b","updatedReplicas":1}}
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-13T10:46:37Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mysql
    namespace: argoflow
    resourceVersion: "257060272"
    uid: 95361dcc-3945-4023-92a2-8b25a0a98fef
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: mysql
    serviceName: mysql-service
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: mysql
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: MYSQL_DATABASE
            value: sso
          image: mysql:8.0.35
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-persistent-volume
            subPath: mysql
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: mysql-persistent-volume
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 24Gi
        volumeMode: Filesystem
      status:
        phase: Pending
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: mysql-65fbf79b97
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updateRevision: mysql-65fbf79b97
    updatedReplicas: 1
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    annotations:
      meta.helm.sh/release-name: argoflow
      meta.helm.sh/release-namespace: argoflow
    creationTimestamp: "2024-04-09T14:35:51Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: Helm
    name: mysql-backup
    namespace: argoflow
    resourceVersion: "281201406"
    uid: 3e923294-2b18-4452-a28e-28870cd5d06e
  spec:
    concurrencyPolicy: Forbid
    failedJobsHistoryLimit: 1
    jobTemplate:
      metadata:
        creationTimestamp: null
      spec:
        template:
          metadata:
            creationTimestamp: null
          spec:
            containers:
            - env:
              - name: MYSQL_HOST
                value: mysql-service
              - name: MYSQL_PORT
                value: "3306"
              - name: MYSQL_USER
                valueFrom:
                  secretKeyRef:
                    key: MYSQL_LOGIN
                    name: sso-secret
              - name: MYSQL_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: MYSQL_PASSWORD
                    name: sso-secret
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    key: S3_ACCESS_KEY
                    name: aws-secret
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    key: S3_SECRET_KEY
                    name: aws-secret
              - name: BUCKET
                value: backups.bear2b.com
              - name: PATH
                value: mysql_backups/argoflow-k8s-sso
              image: argoteam/mysql-backup-s3:1.1
              imagePullPolicy: IfNotPresent
              name: mysql-backup
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: OnFailure
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
    schedule: 0 2 * * *
    successfulJobsHistoryLimit: 3
    suspend: false
  status:
    lastScheduleTime: "2024-07-09T02:00:00Z"
    lastSuccessfulTime: "2024-07-09T02:00:07Z"
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/job-tracking: ""
    creationTimestamp: "2024-04-10T02:00:00Z"
    generation: 1
    labels:
      controller-uid: eb2536c3-c3a4-4db4-88b1-7ceb80d3ebc1
      job-name: mysql-backup-28545240
    name: mysql-backup-28545240
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: CronJob
      name: mysql-backup
      uid: 3e923294-2b18-4452-a28e-28870cd5d06e
    resourceVersion: "253868754"
    uid: eb2536c3-c3a4-4db4-88b1-7ceb80d3ebc1
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        controller-uid: eb2536c3-c3a4-4db4-88b1-7ceb80d3ebc1
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          controller-uid: eb2536c3-c3a4-4db4-88b1-7ceb80d3ebc1
          job-name: mysql-backup-28545240
      spec:
        containers:
        - env:
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: S3_ACCESS_KEY
                name: aws-secret
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: S3_SECRET_KEY
                name: aws-secret
          - name: BUCKET
            value: backups.bear2b.com
          - name: PATH
            value: mysql_backups/argoflow-k8s-sso
          image: argoteam/mysql-backup-s3:1.1
          imagePullPolicy: IfNotPresent
          name: mysql-backup
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    conditions:
    - lastProbeTime: "2024-04-11T09:23:10Z"
      lastTransitionTime: "2024-04-11T09:23:10Z"
      message: Job has reached the specified backoff limit
      reason: BackoffLimitExceeded
      status: "True"
      type: Failed
    failed: 7
    ready: 0
    startTime: "2024-04-10T02:00:00Z"
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/cronjob-scheduled-timestamp: "2024-07-07T02:00:00Z"
    creationTimestamp: "2024-07-07T02:00:00Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
      batch.kubernetes.io/job-name: mysql-backup-28671960
      controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
      job-name: mysql-backup-28671960
    name: mysql-backup-28671960
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: CronJob
      name: mysql-backup
      uid: 3e923294-2b18-4452-a28e-28870cd5d06e
    resourceVersion: "280564531"
    uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
          batch.kubernetes.io/job-name: mysql-backup-28671960
          controller-uid: 9ede54ca-cff1-4a35-8e2c-d33859587e9c
          job-name: mysql-backup-28671960
      spec:
        containers:
        - env:
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: S3_ACCESS_KEY
                name: aws-secret
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: S3_SECRET_KEY
                name: aws-secret
          - name: BUCKET
            value: backups.bear2b.com
          - name: PATH
            value: mysql_backups/argoflow-k8s-sso
          image: argoteam/mysql-backup-s3:1.1
          imagePullPolicy: IfNotPresent
          name: mysql-backup
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2024-07-07T02:00:07Z"
    conditions:
    - lastProbeTime: "2024-07-07T02:00:07Z"
      lastTransitionTime: "2024-07-07T02:00:07Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2024-07-07T02:00:00Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/cronjob-scheduled-timestamp: "2024-07-08T02:00:00Z"
    creationTimestamp: "2024-07-08T02:00:00Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
      batch.kubernetes.io/job-name: mysql-backup-28673400
      controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
      job-name: mysql-backup-28673400
    name: mysql-backup-28673400
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: CronJob
      name: mysql-backup
      uid: 3e923294-2b18-4452-a28e-28870cd5d06e
    resourceVersion: "280882975"
    uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
          batch.kubernetes.io/job-name: mysql-backup-28673400
          controller-uid: 4bcb23b6-0d00-4cb5-9593-1e9d22297de3
          job-name: mysql-backup-28673400
      spec:
        containers:
        - env:
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: S3_ACCESS_KEY
                name: aws-secret
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: S3_SECRET_KEY
                name: aws-secret
          - name: BUCKET
            value: backups.bear2b.com
          - name: PATH
            value: mysql_backups/argoflow-k8s-sso
          image: argoteam/mysql-backup-s3:1.1
          imagePullPolicy: IfNotPresent
          name: mysql-backup
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2024-07-08T02:00:07Z"
    conditions:
    - lastProbeTime: "2024-07-08T02:00:07Z"
      lastTransitionTime: "2024-07-08T02:00:07Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2024-07-08T02:00:00Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
- apiVersion: batch/v1
  kind: Job
  metadata:
    annotations:
      batch.kubernetes.io/cronjob-scheduled-timestamp: "2024-07-09T02:00:00Z"
    creationTimestamp: "2024-07-09T02:00:00Z"
    generation: 1
    labels:
      batch.kubernetes.io/controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
      batch.kubernetes.io/job-name: mysql-backup-28674840
      controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
      job-name: mysql-backup-28674840
    name: mysql-backup-28674840
    namespace: argoflow
    ownerReferences:
    - apiVersion: batch/v1
      blockOwnerDeletion: true
      controller: true
      kind: CronJob
      name: mysql-backup
      uid: 3e923294-2b18-4452-a28e-28870cd5d06e
    resourceVersion: "281201400"
    uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
  spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    manualSelector: false
    parallelism: 1
    podReplacementPolicy: TerminatingOrFailed
    selector:
      matchLabels:
        batch.kubernetes.io/controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
    suspend: false
    template:
      metadata:
        creationTimestamp: null
        labels:
          batch.kubernetes.io/controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
          batch.kubernetes.io/job-name: mysql-backup-28674840
          controller-uid: 6b72fa6d-46dd-4c35-b4eb-7a3e39b79dc2
          job-name: mysql-backup-28674840
      spec:
        containers:
        - env:
          - name: MYSQL_HOST
            value: mysql-service
          - name: MYSQL_PORT
            value: "3306"
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: MYSQL_LOGIN
                name: sso-secret
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MYSQL_PASSWORD
                name: sso-secret
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: S3_ACCESS_KEY
                name: aws-secret
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: S3_SECRET_KEY
                name: aws-secret
          - name: BUCKET
            value: backups.bear2b.com
          - name: PATH
            value: mysql_backups/argoflow-k8s-sso
          image: argoteam/mysql-backup-s3:1.1
          imagePullPolicy: IfNotPresent
          name: mysql-backup
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: OnFailure
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    completionTime: "2024-07-09T02:00:07Z"
    conditions:
    - lastProbeTime: "2024-07-09T02:00:07Z"
      lastTransitionTime: "2024-07-09T02:00:07Z"
      status: "True"
      type: Complete
    ready: 0
    startTime: "2024-07-09T02:00:00Z"
    succeeded: 1
    terminating: 0
    uncountedTerminatedPods: {}
kind: List
metadata:
  resourceVersion: ""
