apiVersion: v1
kind: ConfigMap
metadata:
  name: manager-conf
  namespace: {{ .Values.namespace }}
data:
  app-config.json: |
    {
        "protocol" : "{{ .Values.manager.protocol }}://",
        "apiUrl" : "{{ .Values.api.host }}",
        "editorUrl" : "{{ .Values.editor.host }}",
        "mediaLibUrl" : "medialib.ar-go.co",
        "shortlinksDisabled": true,
        "arDisabled": true,
        "ssoEnabled": true,
        "ssoUrl" : "{{ .Values.sso.host }}/api/v2",
        "readerTemplateVersion": "1.0"
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.manager.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.manager.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.manager.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: {{ .Values.manager.name }}
        cluster: {{ .Values.labels.cluster }}
      annotations:
        timestamp: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      containers:
      - name: {{ .Values.manager.name }}
        image: {{ .Values.manager.image.repository }}:{{ .Values.manager.version }}
        imagePullPolicy: {{ .Values.manager.image.pullPolicy }}
        volumeMounts:
        - mountPath: /usr/share/nginx/html/assets/app-config.json
          subPath: app-config.json
          readOnly: true
          name: manager-conf
      volumes:
      - name: manager-conf
        configMap:
          name: manager-conf
      imagePullSecrets:
      - name: regcred

---
apiVersion: v1
kind: Service
metadata:
  name: manager-service
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  ports:
  - port: 8196
    targetPort: 80
  selector:
    name: {{ .Values.manager.name }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: {{ .Values.namespace }}
  name: manager-service-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.org/client-max-body-size: "100m"
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.manager.host }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: manager-service
                port:
                  number: 8196
